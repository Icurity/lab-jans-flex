<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:c="http://java.sun.com/jstl/core"     xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    template="/ext/nibss-login-template.xhtml">

    <f:metadata>
        <f:viewAction action="#{authenticator.prepareAuthenticationForStep}" if="#{not identity.loggedIn}" />
    </f:metadata>

    <ui:define name="pageTitle">BVN - Verify</ui:define>

    <ui:define name="maincontent">
        <c:set var="errorMessage"
            value="#{facesContext.getMessageList().stream().map(message -> message.getSummary()).filter(summary -> summary.startsWith('OTP-')).findFirst().orElse('')}" />

            <c:set var="otpDeliveryError" value="#{errorMessage.startsWith('OTP-DELIVERY-FAIL')}" />
        <script>
            var _optOptions = [];
        </script>
        <div class="flex flex-col justify-center py-6">
            <div class="px-6">
                <h1 class="text-2xl md:text-3xl text-midnight font-medium mb-2 text-center ">
                    <h:outputText value="#{identity.getWorkingParameter('clientName')}" escape="false" />
                </h1>
                <div class="flex flex-col justify-center items-center p-6 mb-3">
                    <div class="flex flex-row items-center">
                        <div
                            class="flex items-center justify-center rounded-full w-7 h-7 font-bold bg-primary text-white">
                            <svg viewbox="0 0 13.5 10.2" height="14" width="14">
                                <path fill="#FFF"
                                    d="M4.6,9.9L0.3,5.5C0,5.3,0,4.8,0.3,4.6l0.9-0.9c0.3-0.3,0.7-0.3,0.9,0l2.9,2.9l6.3-6.3C11.6,0,12,0,12.3,0.3l0.9,0.9c0.3,0.3,0.3,0.7,0,0.9L5.6,9.9C5.3,10.1,4.9,10.1,4.6,9.9z">
                                </path>
                            </svg>
                        </div>
                        <div class="w-28 h-1 relative">
                            <div class="bg-primary-light w-full h-full"></div>
                            <div class="absolute bg-primary w-full h-full inset-0"></div>
                        </div>
                        <div
                            class="flex bvn-input-page items-center justify-center rounded-full w-7 h-7 font-bold bg-primary-light text-primary">
                            <div class="pt-1">2</div>
                        </div>
                        <div class="w-28 h-1 relative">
                            <div class="bg-primary-light w-full h-full"></div>
                        </div>
                        <div
                            class="flex bvn-input-page items-center justify-center rounded-full w-7 h-7 font-bold bg-primary-light text-primary">
                            <div class="pt-1">3</div>
                        </div>
                    </div>
                </div>

                <div style="font-size: 14px!important;" class="text-sm md:text-lg text-silver font-normal text-center ">
                    <h:outputText value="We will send an OTP to verify your identity" />
                </div>
            </div>
            <c:choose>
                <c:when test="#{otpDeliveryError}">
                  <c:set
                    var="message"
                    value="#{'We couldn\'t deliver the otp. Please try again later.'}" />
                </c:when>
                <c:when test="#{otpValidationError}">
                  <c:set
                    var="message"
                    value="#{'We couldn\'t validate OTP.'}" />
                </c:when>
              </c:choose>

            <div style="max-width: 650px;" id="contactlist" class="mt-4 mb-6 max-w-2xl phone-email-otp mx-auto">
                <ui:repeat value="${identity.getWorkingParameter('contacts')}" var="contact">
                    <div id="#{identity.getWorkingParameter(contact)}-d"
                        style="padding: 12px 16px;margin-bottom:0px;border:1px solid #F5F7FA; margin-bottom: 15px; border-radius: 10px; height: 50px;"
                        onclick="javascript:submitAlternative('#{contact}',this)"
                        class="hover-contact pointer odd:bg-white sm:bg-white text-midnight sm:mb-5 last-of-type:sm-0 p-6 sm:rounded-xl cursor-pointer sm:border-2 sm:border-transparent sm:transition-all sm:hover:scale-105 sm:hover:drop-shadow-xl sm:hover:border-primary sm:ease-in-out">
                        <div class="flex flex-row items-center justify-between">
                            <div class="flex flex-row items-center">
                                <div class="phone-email-svg">
                                    <div id="#{contact}" class="f1 bsgreen">
                                        <div style="color: #4D4D4D;" id="#{identity.getWorkingParameter(contact)}"
                                            class="f3 bbsgreen">

					</div>
                                    </div>
                                </div>
                                <div class="ml-6">
                                    <div class="size-of-fonts">
                                        <div style="font-size: 14px;" class="font-normal"><i></i> #{contact}</div>
                                        <!--<div style="font-size: 14px;" class="text-silver text-xs md:text-sm" id="#{identity.getWorkingParameter(contact)}_"></div>-->
                                    </div>
                                </div>
                            </div>
                            <div class="ml-6">
                                <svg viewbox="0 0 125.5 206.5" height="20" width="10">
                                    <path fill="#717171"
                                        d="M122.1,111.3l-91.9,91.9c-4.4,4.4-11.6,4.4-16,0c0,0,0,0,0,0 L3.4,192.4c-4.4-4.4-4.4-11.6,0-16l72.8-73.2L3.4,30.1c-4.4-4.4-4.4-11.6,0-16L14.1,3.3c4.4-4.4,11.6-4.4,16,0c0,0,0,0,0,0 l91.9,91.9C126.5,99.7,126.5,106.8,122.1,111.3C122.1,111.3,122.1,111.3,122.1,111.3z">
                                    </path>
                                </svg>
                            </div>
                        </div>
                        <script>
                            _optOptions.push('#{contact}');
                        </script>
                        <span id="otpError_#{contact}" class="paragraph mb-medium1 list incorrect-otp dark-red tc pv2 ph0 ma0 f5" style="font-size:80%!important;color: #c33025; ">
                            <h:outputText value="#{message}" />
                        </span>
                    </div>
                    <h:panelGroup rendered='#{!otpDeliveryError}' layout="block" style="min-height:0px">
                        <div style="display:none;text-align:center;padding:20px;margin-bottom:20px;"
                            id="otp_#{contact}">
                            <p style="text-align:center;font-size:16px;margin-bottom:10px;color:#748394;">
                                <small>#{identity.getWorkingParameter('msg')}</small>
                            </p>
                            <div class="otp-filling-input #{otpValidationError}">
                                <input class="otp" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                                    oninput='digitValidate(this)' onkeyup='tabChange(1, this)' />
                                <input class="otp" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                                    oninput='digitValidate(this)' onkeyup='tabChange(2, this)' />
                                <input class="otp" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                                    oninput='digitValidate(this)' onkeyup='tabChange(3, this)' />
                                <input class="otp" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                                    oninput='digitValidate(this)' onkeyup='tabChange(4, this)' />
                                <input class="otp" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                                    oninput='digitValidate(this)' onkeyup='tabChange(5, this)' />
                                <input class="otp" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                                    oninput='digitValidate(this)' onkeyup='tabChange(6, this)' />
                            </div>
                            <h:messages class="list incorrect-otp dark-red tc pv2 ph0 ma0 f5"
                                style="font-size:80%!important;color: #c33025; "/>
                            <p style="font-size:.8rem;padding-top:10px;" class="err-hide">Your code will expire <span
                                    class="time-counter"></span></p>
                            <p style="text-align:center;font-size:16px;margin-bottom:10px;color:#1b472c;"
                                class="err-hide"><small
                                    style="font-weight:400"><!--Haven't got the confirmation code yet?--> <span
                                        style="cursor: pointer"
                                        onclick="javascript:submitAlternative('#{contact}', document.getElementById('#{identity.getWorkingParameter(contact)}-d'))">Resend
                                        Code</span></small></p>
                        </div>
                    </h:panelGroup>
                </ui:repeat>
            </div>
        </div>
        <div class="text-sm md:text-lg text-silver font-normal text-center relative">
            <div class="relative or-text"><span>Or</span></div>
        </div>
        <div class="text-sm md:text-lg text-silver font-normal text-center relative">
            <div class="relative after-or-text"><span
                    style="font-weight:400; font-size: 12px!important; padding: 0 3%;">Enter your current banking mobile
                    number below</span></div>
        </div>
        <div id="authnumber-input" class="flex flex-col justify-center text-center px-4 md:px-12 py-4">
            <form id="myform" action="" method="post">
                <style>
                    #authphone {
                        max-width: 379px;
                        height: 60px;
                    }

                    @media (max-width: 767px) {

                        /*#authphone{
max-width: 100%;
}*/
                        #contactlist>div {
                            width: 379px;
                            margin: 0 auto;
                        }
                    }

                    @media (min-width: 768px) {
                        #contactlist>div {
                            width: 379px;
                            margin: 0 auto;
                        }
                    }

                    @media (min-width: 320px) and (max-width: 409px) {
                        #contactlist>div {
                            width: 350px;
                            margin: 0 auto;
                        }
                    }

                    @media (min-width: 1024px) {
                        #contactlist {
                            width: 40%;
                        }
                    }

                    /*.otp-filling-input input.otp{
border: 1px solid #eee;
}
.otp-filling-input input.otp:focus, .otp-filling-input input.otp:focus-visible{
border: 1px solid #26ad5f;
}*/
                    .error-block .otp,
                    .error-block .otp-for-number {
                        border: 2px solid #c33025;
                    }

                    .time-counter {
                        font-weight: bold;
                    }
		    .incorrect-otp{
			padding-top: 20px;
	            }
		    ul li.incorrect-otp, ul.list.incorrect-otp, .error-block .auto-submit-otp{
                        padding-top: 0px!important;
                    }
		    .error-block .auto-submit-otp{
                        padding-bottom: 0px!important;
                    }
                </style>
                <input id="authphone" pattern="[0-9]*" maxlength="11" inputmode="numeric"
                    placeholder="Enter Phone Number"
                    class="form-control  self-center text-2xl text-midnight text-center tracking-[.25em] placeholder:text-[#BAC2CA] font-normal border-2 border-gray px-4 md:px-16 py-4 rounded-xl focus:border-primary outline-none duration-500 transition-all focus:border-primary focus:drop-shadow-xl ease-in-out"
                    style="font-size: inherit; width: 100%; border-radius: 10px; border-width: 1px; border-color: #89939e;"
                    value="" />
                    <span id="otpError_ICAD" class="paragraph mb-medium1 list incorrect-otp dark-red tc pv2 ph0 ma0 f5" style="font-size:80%!important;color: #c33025; ">
                        <h:outputText value="#{message}" />
                    </span>
            </form>
            <script>
                var altNum = sessionStorage.getItem('altNumber');
                if (altNum) {
                    _optOptions.push(altNum);
                }
            </script>
            <h:panelGroup rendered="#{!otpDeliveryError and !otpValidationError}">
            <h:messages class="list dark-red tc pv2 ph0 ma0 f5" style="font-size: 80% !important; display:nnone;" />
	    </h:panelGroup>	
        </div>
	
       		<div id="altnumotp" style="min-height:20px; display:none">
		<div class="auto-submit-otp" style="display:nonee;text-align:center;padding:20px;margin-bottom:20px;"
                id="otp_auto_submit">
                <p style="text-align:center;font-size:16px;margin-bottom:10px;"><small
                        class="text-silver">#{identity.getWorkingParameter('msg')}</small></p>
                
		    <div class="otp-filling-input #{otpValidationError}">
                    <input class="otp-for-number" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                        oninput='InputdigitValidate(this)' onkeyup='InputtabChange(1)' />
                    <input class="otp-for-number" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                        oninput='InputdigitValidate(this)' onkeyup='InputtabChange(2)' />
                    <input class="otp-for-number" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                        oninput='InputdigitValidate(this)' onkeyup='InputtabChange(3)' />
                    <input class="otp-for-number" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                        oninput='InputdigitValidate(this)' onkeyup='InputtabChange(4)' />
                    <input class="otp-for-number" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                        oninput='InputdigitValidate(this)' onkeyup='InputtabChange(5)' />
                    <input class="otp-for-number" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="1"
                        oninput='InputdigitValidate(this)' onkeyup='InputtabChange(6)' />
                </div>
		<h:panelGroup rendered='#{otpDeliveryError}' layout="block">
			<span  class="paragraph mb-medium1 list incorrect-otp dark-red tc pv2 ph0 ma0 f5" style="font-size:80%!important;color: #c33025; "><h:outputText value="#{message}" /></span>
                </h:panelGroup>
                <h:panelGroup rendered='#{otpValidationError}' layout="block">
                <h:messages class="list incorrect-otp dark-red tc pv2 ph0 ma0 f5"
                    style="font-size:80%!important; color: #c33025;" />
                </h:panelGroup>
                <p style="font-size:.8rem;padding-top:10px;" class="err-hide">Your code will expire <span
                        class="time-counter"></span></p>
                <div class="text-sm md:text-lg text-silver font-normal text-center relative err-hide">
                    <div class="relative after-or-text"><span
                            style="font-weight:400; font-size: 80%;color:#1b472c;"><!--Haven't got the confirmation code yet?-->
                            <a onclick="altnumotpresend()" href="#">Resend Code</a></span></div>
                </div>
            </div>
	</div>

	<!--<h:panelGroup rendered='#{otpDeliveryError}' layout="block">
	 <div id="altnumotp" style="min-height:20px; display:none">
	   <span  class="paragraph mb-medium1 list incorrect-otp dark-red tc pv2 ph0 ma0 f5" style="font-size:80%!important;color: #c33025; "><h:outputText value="#{message}" /></span>
	 </div>
         </h:panelGroup>-->
        <div class="auth-button" style="display: none; text-align: center;">

            <h:commandButton rendered="#{empty identity.getWorkingParameter('msg')}" id="authButton"
                styleClass="button proceed-button rounded-full py-4 px-10 mt-4 bg-primary text-white border-2 border-transparent hover:border-primary hover:bg-primary-light hover:text-primary  self-center min-w-[170px] min-h-[60px] duration-300 ease-in-out transition-all hover:-translate-y-1 hover:drop-shadow-xl"
                value="Proceed" iconAwesome="fa-sign-in" style="font-weight: 500;max-width: 650px;" />
        </div>


        <div style="display:none;" id="prb" class="pt2">
            <input class="f7 bw0 br1 ph3 pv2 bg-orange2 white hover-bg-orange2 hover-white btn cust-misc-button"
                id="cancel_bt" onclick="hideAlternative()" type="button" value="#{msgs['casa.cancel']}" />
        </div>

        <form id="casa_form" action="#{request.contextPath}/postlogin.htm">
            <input type="hidden" name="alternativeMethod" id="alternativeMethod" />
        </form>


        <!--    </section>-->
        <div style="display: none;" class="otp-submit-area">
            <ui:include src="/ext/casa.xhtml" />
        </div>
        <script>
            // This is needed since JSF does not allow to set required attribute
            $(".focused-text").attr("required", "true")
        </script>
        <script>

            function countdownTimer(e, m, s) {
                let t = m * 60 + s;
                let timer = setInterval(function () {
                    if (t > 0) {
                        //clearInterval(timer);
                    }
                    else {
                        clearInterval(timer);
                    }
                    let m = Math.floor(t / 60);
                    let s = t % 60;
                    let ss = '0';
                    if (s > 9) {
                        ss = '';
                    }
                    let txt = String(m) + ':' + ss + String(s);
                    e.innerHTML = txt;
                    t--;
                }, 1000)
            }

            function isNigMobileNumber(phoneNo) {
                const startStringsArrays = ['07', '08', '09'];
                const standardLengthOfMobile = 11;
                const pattern = /^[0-9]*$/;
                if (!pattern.test(phoneNo)) {
                    return false;
                }
                if (standardLengthOfMobile !== phoneNo.length) {
                    return false;
                }

                let startPart = phoneNo.substring(0, 2);
                if (!startStringsArrays.includes(startPart)) {
                    return false;
                }

                return true;
            }

	    document.querySelectorAll('.incorrect-otp').forEach(function(el) {
   //  console.log(el);
    el.style.display = 'none';
});


            let clicked_option = window.sessionStorage.getItem('clicked_option');

            if (clicked_option !== null) {
                // document.getElementById('otp_'+clicked_option).style.display = 'block';
                if (clicked_option === 'authnumber-input') {
                    document.getElementById('altnumotp').style.display = 'block';
                    let counterEle = document.getElementById('altnumotp').querySelector('.time-counter');
                    if(counterEle !== null) countdownTimer(counterEle, 3, 0);
		    document.getElementById('altnumotp').querySelector('.incorrect-otp').style.display = 'block';
                    let errMsg = document.getElementById('altnumotp').querySelector('.incorrect-otp').textContent;
                    errMsg = errMsg.toLowerCase();

                    if (errMsg.includes('try again')) {
                        document.getElementById('altnumotp').querySelector('.otp-filling-input').style.display = 'none';
			document.getElementById('altnumotp').querySelector('.incorrect-otp').style.display = 'block';
			document.querySelectorAll('.err-hide').forEach(function(el) {
   //  console.log(el);
    el.style.display = 'none';
});

			document.getElementById('otp_auto_submit').querySelector('p').style.display = 'none';
                    }

		    if (errMsg.includes('incorrect otp')) {
			document.getElementById('altnumotp').classList.add('error-block');
		    }

                }
                else {
		    if(document.getElementById('otp_' + clicked_option) !== null){
                    document.getElementById('otp_' + clicked_option).style.display = 'block';
                    let counterEle = document.getElementById('otp_' + clicked_option).querySelector('.time-counter');
                    countdownTimer(counterEle, 3, 0);
		    if(document.getElementById('otp_' + clicked_option).querySelector('.incorrect-otp') !== null){
		    document.getElementById('otp_' + clicked_option).querySelector('.incorrect-otp').style.display = 'block';
                    let errMsg = document.getElementById('otp_' + clicked_option).querySelector('.incorrect-otp').textContent;
                    errMsg = errMsg.toLowerCase();

		    if (errMsg.includes('incorrect otp')) {
			document.getElementById('otp_' + clicked_option).classList.add('error-block');
                    }else if (errMsg.includes('try again')) {
                        document.getElementById('otp_' + clicked_option).querySelector('.otp-filling-input').style.display = 'none';
                        document.getElementById('otp_' + clicked_option).querySelector('.err-hide').style.display = 'none';
                    }
		    }
		    }
		    if(document.getElementById('otpError_' + clicked_option) !== null){
		    document.getElementById('otpError_' + clicked_option).style.display = 'block';
		   }
                }
            }




            /*


            var msg = "${identity.getWorkingParameter('msg')}";
            // msg = msg.replace('***', '');
            if (msg !== '') {
                for (var id of _optOptions) {

                    if (msg.includes(id)) {
                        var _id = 'otp_' + id;

            if(document.getElementById(_id) !== null){
                            document.getElementById(_id).style.display = 'block';

             let counterEle =  document.getElementById(_id).querySelector('.time-counter');
             countdownTimer(counterEle, 3, 0);

            var err = document.getElementById(_id).querySelector('.incorrect-otp');
                        if(err !== null){
                        document.getElementById(_id).classList.add('error-block');
                        }
            }
else {
    document.getElementById('altnumotp').style.display = 'block';

document.getElementById('authnumber-input').style.display = 'none';
 let counterEle =  document.getElementById('altnumotp').querySelector('.time-counter');
                         countdownTimer(counterEle, 3, 0);
}

                    }
                }
            }*/
        </script>
        <script>
            var input = document.querySelector('#authphone');
            input.addEventListener('keyup', checkLength);
            function checkLength(e) {

                let el = document.getElementById('numd');
                if (el !== null) {
                    el.remove();
                }

                document.getElementById('authphone').classList.remove('input-error');

                var thenum = e.target.value.replace(/[^0-9]/g, "");

                e.target.value = thenum;

                let isValidNumber = isNigMobileNumber(thenum);
                console.log('**', isValidNumber);

                if (!isValidNumber) {
                    document.getElementById('authphone').classList.add('input-error');
                    document.getElementById('authphone').insertAdjacentHTML('afterend', '<div id="numd">Enter a valid phone number starting with \'0\'</div>'); return;
                }

                if (thenum.length === 11) {

                    window.sessionStorage.setItem('clicked_option', 'authnumber-input');

                    setTimeout(function () {

                        document.getElementById("myform").style.display = "none";
                        document.getElementById("otp_auto_submit").style.display = "block";
                        document.getElementById("authnumber-input").style.padding = "0";

                        var num = thenum;
                        sessionStorage.setItem('altNumber', num);
                        let f = document.getElementById("casa_form");
                        f.alternativeMethod.value = num;
                        f.submit();
                    }, 500);
                }
            }

            function altnumotpresend() {
                event.preventDefault();
                var num = sessionStorage.getItem('altNumber');
                let f = document.getElementById("casa_form");
                f.alternativeMethod.value = num;
                f.submit();
            }
        </script>
        <script>
            var otp = '';
            let digitValidate = function (ele) {
                console.log(ele.value);
                ele.value = ele.value.replace(/[^0-9]/g, '');

                var p = ele.parentElement;
                var nodes = p.children;
                // console.log(nodes.length);
                otp = '';
                for (let node of nodes) {
                    // console.log(node);
                    otp = otp + node.value;
                }
                // console.log(otp);
                document.getElementById('loginForm:otpCode').value = otp;
                if (otp.length === 6) {
                    // document.getElementById('loginButton_div').click();
                    document.querySelector('[value=Proceed]').click();
                }
            }
            let InputdigitValidate = function (ele) {
                console.log(ele.value);
                ele.value = ele.value.replace(/[^0-9]/g, '');

                var p = ele.parentElement;
                var nodes = p.children;
                console.log(nodes.length);
                otp = '';
                for (let node of nodes) {
                    console.log(node);
                    otp = otp + node.value;
                }
                console.log(otp);
                document.getElementById('loginForm:otpCode').value = otp;
                if (otp.length === 6) {
                    // document.getElementById('loginButton_div').click();
                    document.querySelector('[value=Proceed]').click();
                }
            }
            //let tabChange = function(val, el){
            // let ele = el.parentElement.children;  // document.querySelectorAll('input.otp');
            // if(ele[val-1].value != ''){
            //document.querySelectorAll('input.otp').style.border = "1px solid #26ad5f";
            // ele[val].focus()
            // }else if(ele[val-1].value == ''){
            //document.querySelectorAll('input.otp').style.border = "none";
            // ele[val-2].focus()
            // }
            //}

            let tabChange = function (val, el) {
                let ele = el.parentElement.children;  // document.querySelectorAll('input.otp');
                if (ele[val - 1].value != '') {
                    ele[val].focus()
                    ele[val - 1].style.border = "2px solid #26ad5f";
                } else if (ele[val - 1].value == '') {
                    ele[val - 2].focus()
                    ele[val - 1].style.border = "none";
                    ele[val - 2].style.border = "none";
                }
            }

            let InputtabChange = function (val) {
                let ele = document.querySelectorAll('input.otp-for-number');
                if (ele[val - 1].value != '') {
                    ele[val].focus()
                    ele[val - 1].style.border = "2px solid #26ad5f";
                } else if (ele[val - 1].value == '') {
                    ele[val - 2].focus()
                    ele[val - 1].style.border = "none";
                    ele[val - 2].style.border = "none";
                }
            }
/*
                                    function countdownTimer(e, m, s) {
                                    let t = m * 60 + s;
                                    setInterval( function() {
                                    let m = Math.floor(t/60);
                                    let s = t%60;
                                    let txt = String(m) + ':' + String(s);
                                    e.innerHTML = txt;
                                    t--;
                                    }, 1000)
                                    }*/


        </script>

        <script>
            const inputs = document.querySelectorAll('input.otp-for-number');
            const handlePaste = function (e) {
                const data = e.clipboardData.getData('text');
                inputs.forEach((input, i) => {
                    input.value = data[i] || input.value
                })
            }
            inputs.forEach(input => {
                input.addEventListener('paste', handlePaste);
            })

            const otpinputs = document.querySelectorAll('input.otp');
            const otphandlePaste = function (e) {
                const data = e.clipboardData.getData('text');
                otpinputs.forEach((input, i) => {
                    input.value = data[i] || input.value
                })
            }
            otpinputs.forEach(input => {
                input.addEventListener('paste', otphandlePaste);
            })
        </script>

        <script>
            var err = document.getElementById('altnumotp').querySelector('.incorrect-otp');
            if (err !== null) {
                document.getElementById('altnumotp').classList.add('error-block');
            }
        </script>

    </ui:define>

</ui:composition>

